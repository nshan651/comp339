// Insertion of some of George's code in class, not necessarily answer but good reference material
// Saved here since most likely will be deleted in main.cpp
#include <iostream>
#include <ostream>    // <- java.io
#include <vector>     // <- List interface, ArrayList<T>
#include <map>        // Map<K,V> interface, HashMap<K,V> and TreeMap<K,V>
#include <set>        // Set<T> interface, HashSet<T>

using namespace std; // Generally better to keep this local not global
int main(int argc, char **argv) { 
  //using namespace std;
	cout << "Hello world!" << endl;
  cout << "Hello world!\n"; // \n Equivalent to << endl;
  cout << "dfdf" << endl;
  
  vector<int> v = {3, 2, 4, 6};
  v.push_back(7);
  v.pop_back();
  v.push_back(8);
  for (auto item : v) {
    cout << item << endl;
  }

  map<char,char> mcc;

  auto alphabet = string{"ABCDEFGHIJKLMNOPQRSTUVWXYZ"};
  auto shift = 3;

  for (auto i = 0; i < alphabet.length(); i++) {
    mcc[alphabet[i]] = alphabet[(i+shift) % alphabet.length()];
    cout << "mapped " << alphabet[i] << " to " << mcc[alphabet[i]] << endl;
  }

  for (const auto item : mcc) {
    cout << item.first << ":" << item.second << endl;
  }

  set<string> s = { "alpha", "beta", "gamma" };
  s.insert("delta");
  //cout << s[4] << end;
  //cout << "Can I subscript?" << s["delta"] << endl;
  for (const auto item : s) {
    cout << item << endl;
  }
  
	return 0;
}